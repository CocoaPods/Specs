{
  "name": "Laziable",
  "version": "1.0.0",
  "summary": "When 'lazy var' doesn't cut it, have a truly Lazy variable in Swift.",
  "screenshots": "https://github.com/BellAppLab/Laziable/raw/master/Images/laziable.png",
  "description": "So you declared a `lazy var` in Swift thinking it would behave like lazily instantiated variables in good ol' Objective-C. You thought you would set them to `nil` and they would reconstruct themselves later on when needed.\n\nYou poor thing.\n\n[They don't](https://stackoverflow.com/a/40847994).\n\nSo why not bring that awesomeness back to Swift in a very lightweight way?",
  "homepage": "https://github.com/BellAppLab/Laziable",
  "license": {
    "type": "MIT",
    "file": "LICENSE"
  },
  "authors": {
    "Bell App Lab": "apps@bellapplab.com"
  },
  "social_media_url": "https://twitter.com/BellAppLab",
  "platforms": {
    "ios": "9.0",
    "watchos": "3.0",
    "osx": "10.10",
    "tvos": "9.0"
  },
  "module_name": "Laziable",
  "source": {
    "git": "https://github.com/BellAppLab/Laziable.git",
    "tag": "1.0.0"
  },
  "source_files": "Sources/Laziable",
  "frameworks": "Foundation"
}
