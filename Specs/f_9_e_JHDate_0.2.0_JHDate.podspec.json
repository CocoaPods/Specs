{
  "name": "JHDate",
  "version": "0.2.0",
  "summary": "Yet another Swift NSDate extension.",
  "description": "# JHDate\n\n[![CI Status](http://img.shields.io/travis/Hout/JHDate.svg?style=flat)](https://travis-ci.org/Hout/JHDate)\n[![Version](https://img.shields.io/cocoapods/v/JHDate.svg?style=flat)](http://cocoapods.org/pods/JHDate)\n[![License](https://img.shields.io/cocoapods/l/JHDate.svg?style=flat)](http://cocoapods.org/pods/JHDate)\n[![Platform](https://img.shields.io/cocoapods/p/JHDate.svg?style=flat)](http://cocoapods.org/pods/JHDate)\n\nJHDate is a wrapper around NSDate that exposes the properties of NSDateComponents. Thus offering date functions with a flexibility that I was looking for:\n\n- Use the object as an NSDate. I.e. as an absolute time.\n- Contains a date (NSDate), a calendar (NSCalendar) and a timeZone (NSTimeZone) property\n- Offers all NSDate & NSDateComponent vars & methods\n- Initialise a date with any combination of components\n- Use default values for initialisation if desired\n- Calendar & time zone can be changed, properties change along\n- Default date is `NSDate()`\n- Default calendar is `NSCalendar.currentCalendar()`\n- Default time zone is `NSTimeZone.localTimeZone()`\n- Implements the Comparable protocol betwen dates with operators. E.g. `==, !=, <, >, <=, >=`\n- implements date addition and subtraction operators with date components. E.g. `date + 2.days`",
  "homepage": "https://github.com/Hout/JHDate",
  "license": "MIT",
  "authors": {
    "Hout": "houtzager@gmail.com"
  },
  "source": {
    "git": "https://github.com/Hout/JHDate.git",
    "tag": "0.2.0"
  },
  "platforms": {
    "ios": "9.0"
  },
  "requires_arc": true,
  "source_files": "Pod/Classes/**/*",
  "resource_bundles": {
    "JHDate": [
      "Pod/Assets/*.png"
    ]
  }
}
