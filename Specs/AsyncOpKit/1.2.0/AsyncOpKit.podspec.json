{
  "name": "AsyncOpKit",
  "version": "1.2.0",
  "summary": "NSOperation for Swift with generic input/output, chaining, error handling, and closures",
  "description": "AsyncOpKit brings Swift generics, error handling, and closures to NSOperations with `AsyncOp`, a Swift-only generic NSOperation subclass for composing asynchronous code.\n`AsyncOp` supports:\n\n* Generic input and output\n* Closures for starting and cancelling work, handling results\n* Closures for evaluating preconditions\n* Making an AsyncOp dependent on input from another\n\nYou can subclass AsyncOp, but because it provides built-in storage for generic input and output and allows you to customize behavior with closures, in many if not most cases you can just use AsyncOp as-is.",
  "authors": "Jed Lewison",
  "homepage": "https://github.com/jedlewison/AsyncOpKit",
  "license": "MIT",
  "source": {
    "git": "https://github.com/jedlewison/AsyncOpKit.git",
    "tag": "1.2.0"
  },
  "platforms": {
    "ios": "8.0",
    "osx": "10.10"
  },
  "requires_arc": true,
  "source_files": "{AsyncOp.swift,AsyncOpTypes.swift,AsyncOpGroup.swift,Legacy/*.swift}"
}
