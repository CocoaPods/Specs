{
  "name": "NMLRUCache",
  "version": "0.1.1",
  "summary": "In Memory LRU Cache for iOS.",
  "description": "\n# NMLRUCache [![Build Status](https://travis-ci.org/Nirma/NMLRUCache.svg?branch=master)](https://travis-ci.org/Nirma/NMLRUCache)\n\n  In Memory LRU Cache Implementation for iOS and OS X.\n\n## Requirements\n  - iOS 5.0+\n  - ARC\n\n## Features\n  - Threadsafe and optimized for use with Grand Central Dispatch.\n  - Completely In Memory Cache that deletes least recently used elements.\n\n## Installation\n### Using CocoaPods\n  - If you are using CocoaPods Add __pod 'NMLRUCache'__ to the Podfile in your project's root and run ```pod install``` \n\n### Copy & Paste Method\n  - Copy the folder `NMLRUCache/` containing the files NMLRUCache.h/m and NMLRUImageCache.h/m into your project.\n\n## Usage\n\n### Initialization:\n### Creating an LRU Image Cache singleton:\n  ```\n      NMLRUCache *imageCache = [NMLRUCache sharedCache];\n      ```\n\n### Changing Shared Cache Size i.e to 20 elements\n      ```\n         [NMLRUCache sharedCache].threshHold = 20;\n\t ```\n\n### Storing an image in the Cache:\n\n\t ```\n\t     [imageCache setImage:image forKey:@\"imageKey\"];\n\t     ```\n\n#### Fetching Image from Cache\n\n\t     ```\n\t         [imageCache imageForKey:@\"imageKey\"];\n\t\t ```\n\n\n",
  "homepage": "https://github.com/nirma/NMLRUCache",
  "license": "MIT",
  "authors": {
    "Nicholas Maccharoli": "nmaccharoli@gmail.com"
  },
  "source": {
    "git": "https://github.com/nirma/NMLRUCache.git",
    "tag": "0.1.1"
  },
  "platforms": {
    "ios": "5.0"
  },
  "requires_arc": true,
  "source_files": "NMLRUCache",
  "frameworks": "UIKit"
}
