{
  "name": "AEBinaryTree",
  "version": "1.0.1",
  "summary": "A thread-safe Swift Binary Search Tree implementing the AVL self-balancing algorithm",
  "description": "A thread-safe Swift Binary Search Tree.  This implementation conforms to the AVL self-balancing algorithm guaranteeing that all branches of the tree have a depth difference of less than 2.  All accessor methods are thread-safe, with internal operations performed on an internal dispatch queue off the main thread.  Random access subscripting is available with O(logN) complexity, but enabling the BinaryTree to be used for populating tableviews and collection views.",
  "homepage": "http://github.com/AllanEvans/BinaryTree-Swift",
  "license": {
    "type": "MIT",
    "file": "LICENSE.md"
  },
  "authors": {
    "Allan Evans": "allan@aelyssum.com"
  },
  "platforms": {
    "ios": "9.0"
  },
  "swift_version": "4.1",
  "source": {
    "git": "https://github.com/AllanEvans/BinaryTree-Swift.git",
    "tag": "1.0.1"
  },
  "source_files": "AEBinaryTree/**/*.{swift,h,m}"
}
