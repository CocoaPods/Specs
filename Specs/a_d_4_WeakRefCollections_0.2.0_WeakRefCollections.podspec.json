{
  "name": "WeakRefCollections",
  "version": "0.2.0",
  "summary": "A lightweight ensemble of nifty Swift Collections that support weak references to their elements.",
  "description": "Unfortunately, Swift does not (yet?) have built-in (native) Collections (As in 'the Collection protocol'\n-> Arrays, Sets, Dictionaries) that support weak references to their elements. Sure, there's NSMapTable\nand NSHashTable. Have you ever tried to work with these? for-in iteration? Nope. .forEach()? Nope.\nNifty functional programming with higher order functions like .map(), .reduce() and .filter()? Nope.\n\nBy using .allObjects or resorting to NSEnumerators, you can achieve these functionalities, too, you might say...\nBut you're using Swift now. You don't want to have to do that, do you? You want lightweight, readable syntax,\nno annoying hacks and workarounds. Maybe you're even writing a server application, so you don't want to have\nto import Foundation.\n\nThis framework is (will be) a humble attempt to provide Collections that properly support weak references\nto their elements. Not only a pseudo-Set (NSHashTable) and a convoluted Dictionary (NSMapTable).\nAn Array, a Set, a Dictionary, a bidirectional Dictionary and the protocol-conformances one would\nexpect from those types.",
  "homepage": "https://github.com/JanNash/WeakRefCollections",
  "license": "MIT",
  "authors": {
    "Jan Nash": "jnash@jnash.de"
  },
  "social_media_url": "http://twitter.com/JanPNash",
  "platforms": {
    "ios": "8.0"
  },
  "source": {
    "git": "https://github.com/JanNash/WeakRefCollections.git",
    "tag": "v0.2.0"
  },
  "source_files": "WeakRefCollections/Sources/**/*.swift",
  "pushed_with_swift_version": "4.0"
}
