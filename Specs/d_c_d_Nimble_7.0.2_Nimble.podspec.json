{
  "name": "Nimble",
  "version": "7.0.2",
  "summary": "A Matcher Framework for Swift and Objective-C",
  "description": "Use Nimble to express the expected outcomes of Swift or Objective-C expressions. Inspired by Cedar.",
  "homepage": "https://github.com/Quick/Nimble",
  "license": {
    "type": "Apache 2.0",
    "file": "LICENSE"
  },
  "authors": "Quick Contributors",
  "platforms": {
    "ios": "8.0",
    "osx": "10.10",
    "tvos": "9.0"
  },
  "source": {
    "git": "https://github.com/Quick/Nimble.git",
    "tag": "v7.0.2"
  },
  "source_files": "Sources/**/*.{swift,h,m,c}",
  "osx": {
    "exclude_files": [
      "Sources/Lib/CwlPreconditionTesting/CwlPreconditionTesting/CwlCatchBadInstructionPosix.swift",
      "Sources/Lib/CwlPreconditionTesting/CwlPreconditionTesting/Posix/CwlPreconditionTesting.h"
    ]
  },
  "ios": {
    "exclude_files": [
      "Sources/Lib/CwlPreconditionTesting/CwlPreconditionTesting/CwlCatchBadInstructionPOSIX.swift",
      "Sources/Lib/CwlPreconditionTesting/CwlPreconditionTesting/Posix/CwlPreconditionTesting.h"
    ]
  },
  "tvos": {
    "exclude_files": [
      "Sources/Lib/CwlPreconditionTesting/CwlPreconditionTesting/Mach/CwlPreconditionTesting.h",
      "Sources/Lib/CwlPreconditionTesting/CwlPreconditionTesting/CwlCatchBadInstruction.swift",
      "Sources/Lib/CwlPreconditionTesting/CwlPreconditionTesting/CwlCatchBadInstruction.m",
      "Sources/Lib/CwlPreconditionTesting/CwlPreconditionTesting/CwlBadInstructionException.swift",
      "Sources/Lib/CwlPreconditionTesting/CwlPreconditionTesting/CwlDarwinDefinitions.swift",
      "Sources/Lib/CwlPreconditionTesting/CwlCatchException/CwlCatchException.swift",
      "Sources/Lib/CwlPreconditionTesting/CwlCatchExceptionSupport/CwlCatchException.m",
      "Sources/Lib/CwlPreconditionTesting/CwlCatchExceptionSupport/include/CwlCatchException.h"
    ]
  },
  "private_header_files": "Sources/NimbleObjectiveC/CurrentTestCaseTracker.h",
  "exclude_files": "Sources/Nimble/Adapters/NonObjectiveC/*.swift",
  "weak_frameworks": "XCTest",
  "requires_arc": true,
  "compiler_flags": "-DPRODUCT_NAME=Nimble/Nimble",
  "pod_target_xcconfig": {
    "ENABLE_BITCODE": "NO",
    "OTHER_LDFLAGS": "-weak-lswiftXCTest",
    "OTHER_SWIFT_FLAGS": "$(inherited) -suppress-warnings",
    "FRAMEWORK_SEARCH_PATHS": "$(inherited) \"$(PLATFORM_DIR)/Developer/Library/Frameworks\""
  },
  "pushed_with_swift_version": "3.0"
}
