{
  "name": "SDMagicHook",
  "version": "1.2.4",
  "summary": "A safe and influence-restricted method hooking for both Objective-C and Swift.",
  "description": "Classical method swizzling with method_exchangeImplementations is quite simple, but it has a lot of limitations and defects:\n\nYou have to add a new method in a class category everytime when you want to swizzle a method.\nDifferent method implementation with same selector in different category will case method conflicts.\nThe method swizzling will affect all the instances of the target classï¼Œhowever in most cases it is not necessary but even has side effects.\n\nNow SDMagicHook will solve the problems mentioned above.",
  "homepage": "https://github.com/larksuite/SDMagicHook",
  "license": "MIT",
  "authors": {
    "gaoshaodong": "gaoshaodong@bytedance.com"
  },
  "platforms": {
    "ios": null
  },
  "source": {
    "git": "https://github.com/larksuite/SDMagicHook.git",
    "tag": "1.2.4"
  },
  "exclude_files": [
    "SDHook/SDMRCTool.{h,m}",
    "SDHook/SDMagicHookUtils.{h,m}"
  ],
  "source_files": "SDHook/*.{h,m}",
  "public_header_files": "SDHook/SDMagicHook.h",
  "requires_arc": true,
  "dependencies": {
    "fishhook": [

    ]
  },
  "subspecs": [
    {
      "name": "SDMagicHookUtils",
      "source_files": "SDHook/SDMagicHookUtils.{h,m}",
      "requires_arc": true
    },
    {
      "name": "SDMagicHookMRCTool",
      "source_files": "SDHook/SDMRCTool.{h,m}",
      "requires_arc": false,
      "dependencies": {
        "SDMagicHook/SDMagicHookUtils": [

        ]
      }
    }
  ]
}
