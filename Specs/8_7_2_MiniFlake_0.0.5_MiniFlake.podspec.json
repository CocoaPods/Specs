{
  "name": "MiniFlake",
  "version": "0.0.5",
  "summary": "Generates time-ordered identifiers as positive 64-bit integers without synchronization.",
  "description": "A Swift micro-framework for generating compact identifiers that are time ordered without the need for synchronization. Unlike UUID-based methods, the identifiers would only be 63-bits long â€” hence fit as a positive number in a 64-bit integer. These identifiers are also roughly time-ordered, hence can be used as a sorting attribute to get the corresponding data objects sorted by time as well.\nInspired from Twitter Snowflake identifier-creation algorithm.",
  "homepage": "https://github.com/adib/MiniFlake.git",
  "license": {
    "type": "MIT",
    "file": "LICENSE.markdown"
  },
  "authors": {
    "Sasmito Adibowo": "adib@basil-salad.com"
  },
  "source": {
    "git": "https://github.com/adib/MiniFlake.git",
    "tag": "0.0.5"
  },
  "social_media_url": "https://twitter.com/cutecoder",
  "documentation_url": "https://github.com/adib/MiniFlake/blob/master/README.markdown",
  "swift_version": "4.0",
  "platforms": {
    "osx": "10.12",
    "ios": "10.3",
    "tvos": "10.2",
    "watchos": "3.2"
  },
  "source_files": "MiniFlake/Classes/**/*",
  "weak_frameworks": "CoreData"
}
