{
  "name": "GPTimeProfiler",
  "version": "1.0.0",
  "summary": "A simple time profiler for Cocoa-based software (Objective-C, Objective-C++, Swift).",
  "description": "`GPTimeProfiler` is used to track the execution time of an arbitrary piece of code. The time is tracked during one\nprofile cycle. One cycle is the time between two method calls `-start` and `-stop`. The object of the `GPTimeProfiler`\nclass stores the total amount of profile cycles. With every call to the `-start` method the amount of profile\ncycles is increased by 1. `GPTimeProfiler` can be used to determine the overall time of execution or the average\ntime of one profile cycle. It can also be used to track the amount of profile cycles.\n\nIt has the convenience methods to get the tracked time in seconds and milliseconds as `NSString`.\n\nThe time tracking part of the `GPTimeProfiler` is based on the `CFAbsoluteTimeGetCurrent()` function.\nThe `GPTimeProfiler` can be used in Objective-C and Swift based applications.",
  "homepage": "https://github.com/GrigoryPtashko/GPTimeProfiler",
  "license": "MIT",
  "authors": {
    "Grigory Ptashko": "grigory.ptashko@gmail.com"
  },
  "source": {
    "git": "https://github.com/GrigoryPtashko/GPTimeProfiler.git",
    "tag": "1.0.0"
  },
  "social_media_url": "https://facebook.com/GrigoryPtashko",
  "platforms": {
    "ios": "8.1"
  },
  "requires_arc": true,
  "source_files": "Pod/Classes/**/*",
  "public_header_files": "Pod/Classes/**/*.h"
}
