{
  "name": "Promis",
  "version": "1.0.1",
  "summary": "The easiest Future and Promises framework in Swift. No magic. No boilerplate.",
  "description": "The easiest Future and Promises framework in Swift. No magic. No boilerplate.\n- Fully unit-tested and documented 💯\n- Thread-safe 🚦\n- Clean interface 👼\n- Support for chaining ⛓\n- Support for cancellation 🙅‍♂️\n- Queue-based block execution if needed 🚆\n- Result type provided via generics 🚀\n- Keeping the magic to the minimum, leaving the code in a readable state without going off of a tangent with fancy and unnecessary design decisions ಠ_ಠ",
  "homepage": "https://github.com/albertodebortoli/Promis",
  "license": {
    "type": "Apache 2",
    "file": "LICENSE"
  },
  "authors": {
    "Alberto De Bortoli": "albertodebortoli.website@gmail.com"
  },
  "source": {
    "git": "https://github.com/albertodebortoli/Promis.git",
    "tag": "1.0.1"
  },
  "social_media_url": "https://twitter.com/albertodebo",
  "platforms": {
    "ios": "9.0"
  },
  "source_files": "Promis/Classes/**/*",
  "frameworks": [
    "UIKit",
    "Foundation"
  ],
  "pushed_with_swift_version": "4.0"
}
