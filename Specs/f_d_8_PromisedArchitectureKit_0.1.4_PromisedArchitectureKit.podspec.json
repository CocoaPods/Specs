{
  "name": "PromisedArchitectureKit",
  "version": "0.1.4",
  "summary": "Simples architecture for PromiseKit",
  "description": "Simplest architecture for PromiseKit.\nThis architectural approach, fits on the View layer of Clean Architecture. It is an alternative to Model-View-Presenter or Model-View-ViewModel, and it is strongly inspired by Redux.\n\nThe idea is to constrain the changes to view state in order to enforce correctness. Changes to state are explicity documented by Events and by a pure reducer function. This approach also allows testing presentation logic with ease (it also includes a mechanism to inject dependencies, such views, API Clients, etc.)",
  "homepage": "https://github.com/rpallas92/PromisedArchitectureKit",
  "license": {
    "type": "MIT",
    "file": "LICENSE"
  },
  "authors": {
    "rpallas92": "ricardo.pallas@adidas-group.com"
  },
  "source": {
    "git": "https://github.com/rpallas92/PromisedArchitectureKit.git",
    "tag": "0.1.4"
  },
  "platforms": {
    "ios": "8.0"
  },
  "source_files": "Classes/**/*",
  "dependencies": {
    "PromiseKit": [
      "~> 6.0"
    ]
  },
  "swift_version": "3.2"
}
