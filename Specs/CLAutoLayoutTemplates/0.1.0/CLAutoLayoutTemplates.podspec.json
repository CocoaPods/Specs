{
  "name": "CLAutoLayoutTemplates",
  "version": "0.1.0",
  "summary": "Apply constraints to a UIView from another UIView",
  "description": "                       CLAutoLayoutTemplates is `[UIView replaceConstraintsForItem:templateItem:]`. You should call this method\n                       on the top-level view. It will then remove all the constraints that reference the first item and create\n                       and add new constraints based on the template item.\n\n                       I have been using this for animating bounds by creating a hidden `UIView` (e.g. `self.templateView`) with the auto-layout constraints I wanted and then calling `[self.view replaceConstraintsForItem:self.myView templateItem:self.templateView]` inside\n                       an animation block.\n",
  "homepage": "https://github.com/eladb/CLAutoLayoutTemplates",
  "license": "MIT",
  "authors": {
    "Elad Ben-Israel": "elad.benisrael@gmail.com"
  },
  "source": {
    "git": "https://github.com/eladb/CLAutoLayoutTemplates.git",
    "tag": "0.1.0"
  },
  "social_media_url": "https://twitter.com/emeshbi",
  "platforms": {
    "ios": "7.0"
  },
  "requires_arc": true,
  "source_files": "CLAutoLayoutTemplates/*"
}
