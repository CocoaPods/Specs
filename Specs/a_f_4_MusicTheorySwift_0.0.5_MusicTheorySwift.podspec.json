{
  "name": "MusicTheorySwift",
  "version": "0.0.5",
  "summary": "A music theory library with `Note`, `Interval`, `Tone`, `Scale` and `Chord` representations in swift enums.",
  "description": "MusicTheory\n===\n\nA music theory library with `Note`, `Interval`, `Tone`, `Scale` and `Chord` representations in swift enums.\n\nRequirements\n----\n* Swift 3\n* Xcode 8\n* iOS 8.0+\n* tvOS 9.0+\n* macOS 10.9+\n* watchOS 2.0+\n\nInstall\n----\n\n```\npod 'MusicTheory'\n```\n\nUsage\n----\n\nUsage is pretty straitforward. Just import the package and use directly.\n\n```\nimport MusicTheory\n```\n\n### Note\n\n- C, D♭, D, E♭, E, F, G♭, G, A♭, A, B♭ and B notes.\n- Could calculate ideal frequancy based on `A4 = 440Hz` piano for given octave..\n- Could calculate midi note in range of [0 - 127] for octaves [0 - 10].\n- Could calculate piano key value on a 88 key piano for given octave.\n- Could calculate next or previous notes for given `Interval` or `Tone`.\n\n```\nlet c: Note = .c\n```\n\n### Scale\n\n- Major, minor, harmonic minor, dorian, locrian, mixolydian, lydian, phrygian scales.\n- Could create custom scale with base key and intervals like `.custom(key: .c, intervals: [.m2, .M3, .d5, .P5])`.\n- Could create midi note sequance of the whole scale.\n- Could create `Note`s of the scale starting from the key and going forward by intervals from there.\n\n```\nlet c: Note = .c\nlet cMaj: Scale = .major(key: c)\n```\n\n### Chord\n\n- Major, minor, diminished, augmented, sixth, seventh and more popular chords.\n- Could create custom chord with base key and intervals like `.custom(key: .c, intervals: [.m2, .M3, .P5])`\n- Could create midi note sequance of the chord.\n- Could create `Note`s of the chord.\n\n```\nlet c: Note = .c\nlet cMaj: Chord = .maj(key: c)\n```\n\n### Interval\n\n- unison, m2, M2, m3, M3, P4, d5, P5, m6, M6, m7, M7 and P8 intervals.\n- Have degree and halfsteps.\n- Could create custom interval.\n- Used in creation of `Scale`s and `Chord`s.\n\n### Tone\n\n- Halfstep, whole, oneAndHalf and custom values\n- Created for alternate of `Interval` for calculating neighbour `Note`s.\n\n### Documentation\n\nDocumentation created with jazzy, hosted on [github pages](https://cemolcay.github.io/MusicTheory/)",
  "homepage": "https://github.com/cemolcay/MusicTheory",
  "license": "MIT",
  "authors": {
    "cemolcay": "ccemolcay@gmail.com"
  },
  "social_media_url": "http://twitter.com/cemolcay",
  "platforms": {
    "ios": "8.0",
    "osx": "10.9",
    "watchos": "2.0",
    "tvos": "9.0"
  },
  "source": {
    "git": "https://github.com/cemolcay/MusicTheory.git",
    "tag": "0.0.5"
  },
  "source_files": "Source/*.{swift}",
  "frameworks": "Foundation",
  "requires_arc": true,
  "pushed_with_swift_version": "3.0"
}
