{
  "name": "WTUniquePrimitiveType",
  "version": "1.0.1",
  "summary": "Lets you create distinct types based on identical primitive types.",
  "description": "Say that your code has a user identifier that's an Int. The count of users\nis also an Int but, clearly, these are semantically different Ints. What if\nyou accidentally set the value of userId to the count of users? The compiler\nwouldn't complain because both values are Int instances. This library lets\nyou create distinct types for situations like this, where you need\nsemantically different types based on the same primitive type. It works with\nall primitive types, not just Ints, and makes using these distinct types as\neasy and transparent as possible.",
  "homepage": "https://github.com/wltrup/Swift-WTUniquePrimitiveType",
  "license": {
    "type": "MIT",
    "file": "LICENSE"
  },
  "authors": {
    "wltrup": "trupwl@gmail.com"
  },
  "source": {
    "git": "https://github.com/wltrup/Swift-WTUniquePrimitiveType.git",
    "tag": "1.0.1"
  },
  "platforms": {
    "ios": "8.0"
  },
  "source_files": "WTUniquePrimitiveType/Classes/**/*",
  "pushed_with_swift_version": "3.0"
}
