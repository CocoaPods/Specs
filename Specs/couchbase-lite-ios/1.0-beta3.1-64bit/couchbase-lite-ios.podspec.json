{
  "name": "couchbase-lite-ios",
  "version": "1.0-beta3.1-64bit",
  "summary": "Couchbase Lite is an embedded lightweight, document-oriented (NoSQL), syncable database engine.",
  "homepage": "http://www.couchbase.com/communities/couchbase-lite",
  "license": {
    "type": "Apache License, Version 2.0",
    "file": "cblite_ios_1.0-38/LICENSE.txt"
  },
  "authors": {
    "Jens Alfke": "jens@couchbase.com"
  },
  "platforms": {
    "ios": "6.0"
  },
  "source": {
    "http": "http://packages.couchbase.com/releases/couchbase-lite/ios/1.0-beta/couchbase-lite-community-ios_1.0-beta3.1.zip"
  },
  "preserve_paths": [
    "cblite_ios_1.0-38/64-bit/*.framework",
    "cblite_ios_1.0-38/LICENSE.txt"
  ],
  "vendored_frameworks": "cblite_ios_1.0-38/64-bit/CouchbaseLite.framework",
  "public_header_files": "**/*.h",
  "frameworks": [
    "SystemConfiguration",
    "CFNetwork",
    "Security"
  ],
  "libraries": [
    "sqlite3",
    "z"
  ],
  "description": "  **Couchbase Lite** is an embedded lightweight, document-oriented (NoSQL), syncable database engine. \n\n  Get more info and downloads of Couchbase Lite (for iOS and Android) via [the Couchbase mobile portal](http://mobile.couchbase.com)\n\n  [Click here for **official documentation for Couchbase Lite iOS**](http://docs.couchbase.com/couchbase-lite/cbl-ios/)\n\n  Latency matters a lot to users, so a local database takes frustration out of the equation. Itâ€™s got JSON documents, and the same map/reduce as Couchbase Server, in a pint-sized edition.\n\n  Couchbase Lite compiles natively for iOS and Android. Half a megabyte optimized, for quick launch and snappy user experience on occasionally connected devices when data matters.\n\n  **Lightweight** means:\n\n  * Embedded: The database engine is a library linked into the app, not a separate server process.\n  * Small code size: currently under 600kbytes. This is important to mobile apps, which are often downloaded over cell networks.\n  * Quick startup time on relatively-slow CPUs: currently under 50ms on recent iPhones.\n  * Low memory usage with typical mobile data-sets. The expectation is the number of documents will not be huge, although there may be sizable multimedia attachments.\n  * \"Good enough\" performance with these CPUs and data-sets. (Exact figures depend on your data and application, of course.)\n\n  **Document-oriented** means:\n\n  * Like Couchbase Server, it stores records in flexible [JSON](http://json.org) format instead of requiring predefined schemas or normalization.\n  * Records/documents can have arbitrary-sized binary attachments, like multimedia content.\n  * Your application's data format can evolve over time without any need for explicit migrations.\n  * Map/reduce indexing allows fast lookups without needing to use special query languages.\n  * Documents can contain free-form text or geographic coordinates, which are efficiently indexed for full-text search or geo-querying.\n\n  **[Syncable](http://syncable.org/)** means:\n\n  * Any two copies of a database can be brought into sync via an efficient, reliable, proven REST-based [protocol][23].\n  * Sync can be on-demand or continuous (with a latency of a few seconds).\n  * The sync engine supports intermittent and unreliable network connections.\n  * Conflicts can be detected and resolved, with app logic in full control of merging.\n  * Revision trees allow for complex replication topologies, including server-to-server (for multiple data centers) and peer-to-peer, without data loss or false conflicts.\n\n  The native APIs are Objective-C (iOS, Mac) and Java (Android), but an optional internal REST API adapter allows it to be called from other languages like JavaScript and C#, for use in apps built with PhoneGap, Titanium or MonoTouch.\n",
  "requires_arc": false
}