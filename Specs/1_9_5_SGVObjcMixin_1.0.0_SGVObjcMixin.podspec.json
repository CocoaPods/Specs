{
  "name": "SGVObjcMixin",
  "version": "1.0.0",
  "summary": "Dynamic class creation and runtime subclassing as a more granular and reversible alternative to method swizzling.",
  "description": "                       SGVObjcMixin allows to 'mix in' methods from another class into any existing object (of any class). The class being mixed in should meet certain requirements.\n                       This can be used as an object-scoped (versus class-scoped) alternative to method swizzling. It is also arguably easier to reverse at runtime if needed.\n",
  "homepage": "https://github.com/sanekgusev/SGVObjcMixin",
  "license": "MIT",
  "authors": {
    "Alexander Gusev": "sanekgusev@gmail.com"
  },
  "source": {
    "git": "https://github.com/sanekgusev/SGVObjcMixin.git",
    "tag": "1.0.0"
  },
  "social_media_url": "https://twitter.com/sanekgusev",
  "platforms": {
    "ios": "7.0"
  },
  "requires_arc": true,
  "source_files": "Pod/Classes",
  "public_header_files": [
    "Pod/Classes/SGVObjcMixinErrors.h",
    "Pod/Classes/NSObject+SGVObjcMixin.h"
  ]
}
