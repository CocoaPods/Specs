{
  "name": "SwiftInjections",
  "version": "2.1.2",
  "summary": "Simple dependency injection framework for Swift inspired by Typhoon.",
  "description": "Syntax of object definition was made simple and easy to use. It differs from Typhoon's one, but has some look a like elements that makes learning easier.\n\n```\npublic var object:TheObject {\nreturn self.define() { (definition) in\nlet object1 = definition *~> Object1()\nobject1.object2 = self.assembly2.object2\nreturn object1\n}\n}\n```\nEach injectable object is defined as computed property of Assembly. Object itself is created by call of assemblies method `define`, with object injection definition closure. Definition object should be used to initialize object with method `initObject` or by means of `*~>` operator to correctly resolve circular dependencies.",
  "homepage": "https://github.com/rambler-ios/SwiftInjections",
  "license": "MIT",
  "authors": {
    "Andrey Zarembo": "a.zarembo-godzyatsky@rambler-co.ru"
  },
  "source": {
    "git": "https://github.com/rambler-ios/SwiftInjections.git",
    "tag": "2.1.2"
  },
  "platforms": {
    "ios": "8.0"
  },
  "requires_arc": true,
  "source_files": "Pod/Classes/**/*",
  "resource_bundles": {
    "SwiftInjections": [
      "Pod/Assets/*.png"
    ]
  }
}
