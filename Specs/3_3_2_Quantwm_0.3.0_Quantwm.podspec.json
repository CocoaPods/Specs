{
  "name": "Quantwm",
  "version": "0.3.0",
  "summary": "Quantwm is a Data Model access layer, which send ordered notifications",
  "description": "Quantwm is an architecture framework, which enforces a lot of rules to eliminate common sources of variability inside a complex application. View Controllers shall only communicate synchronously with the Model, and Quantwm will schedule the notifications inside the event loop first with a hard-coded priority to update the view hierarchy, then according to property depedency to update view content.\nThe decoupling help building a clean architecture, with a clear contract and context associated to each entity:\n- Source: Writing an event in the model\n- Hard-coded priority processing: Either coordinate and update the view hierarchy, or process the model data.\n- Property dependent processing: Register to Read{A,B} and Write {C}. Is only allowed to Read A and B and Write C.\n- Property dependent sink: Registered view will update their content once all the previous processing has cleanly formatted the data.",
  "homepage": "https://github.com/xlasne/Quantwm",
  "license": {
    "type": "MIT",
    "file": "LICENSE"
  },
  "authors": {
    "xlasne": "xavier.lasne@gmail.com"
  },
  "source": {
    "git": "https://github.com/xlasne/Quantwm.git",
    "tag": "0.3.0"
  },
  "platforms": {
    "ios": "11.0",
    "osx": "10.11"
  },
  "source_files": "Quantwm/Classes/**/*",
  "pushed_with_swift_version": "4"
}
