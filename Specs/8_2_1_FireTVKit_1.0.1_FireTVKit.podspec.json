{
  "name": "FireTVKit",
  "version": "1.0.1",
  "summary": "Discovering your FireTV and controlling the built-in media player is now easy and reactive.",
  "description": "The Amazon Fling SDK lacks a ready to use view controller for discovering FireTVs and controlling the built-in receiver app (media player). That's why I created FireTVKit. It offers a themable view controller for discovering FireTVs in your local network. All the necessary magic happens under the hood. In addition the FireTVKit brings a themable view controller for controlling the built-in media player of a FireTV. Even there all the magic happens under the hood. Thanks to the protocol oriented approach you can easily create your own discovery and player view. If you want to be completely free just use the FireTVManager to do the discovery and get the FireTVs. Then show the FireTVs to your users the way you want it.\n\nThe implementation of the `FireTVPlayer` and the `FireTVSelection` follows the `VIPER` architecture pattern. Make yourself comfortable with `VIPER` first if you want to implement a custom view.",
  "homepage": "https://github.com/crelies/FireTVKit",
  "license": {
    "type": "MIT",
    "file": "LICENSE"
  },
  "authors": {
    "Christian Elies": "chris.elies13@gmail.com"
  },
  "source": {
    "git": "https://github.com/crelies/FireTVKit.git",
    "tag": "1.0.1"
  },
  "cocoapods_version": ">= 1.4",
  "swift_version": "4.0",
  "platforms": {
    "ios": "9.0"
  },
  "source_files": "FireTVKit/Classes/**/*.swift",
  "resource_bundles": {
    "FireTVKit": "FireTVKit/**/*{.storyboard,.xcassets}"
  },
  "frameworks": "UIKit",
  "dependencies": {
    "AmazonFling": [
      "1.3.5"
    ],
    "ReachabilitySwift": [
      "~> 4.3"
    ],
    "RxSwift": [
      "~> 4.5"
    ],
    "RxCocoa": [
      "~> 4.5"
    ]
  },
  "pod_target_xcconfig": {
    "FRAMEWORK_SEARCH_PATHS": "$(inherited) $(PODS_ROOT)/AmazonFling",
    "OTHER_LDFLAGS": "$(inherited) -undefined dynamic_lookup",
    "ENABLE_BITCODE": "NO"
  }
}
