{
  "name": "LazyImage",
  "version": "6.6.0",
  "summary": "Simple and efficient image lazy loading for iOS written in Swift",
  "description": "Simple and efficient image lazy loading functionality for the iOS written in Swift. LazyImage offers ease of use and complete control over your images.\n\nFeatures\nAsynchronous image downloader on a background thread. Main thread is never blocked.\nInstance based for better unit testing your code.\nTemporary caching of the downloaded images with automatic OS clean up.\nOffers the possibility to set a local project image as a placeholder until the actual image is available\nOffers the possibility to add a spinner at the center of the imageView until the image is fetched.\nIf the imageView's size is 0, it sets dimensions to 40x40 prior to the request. This applies to the default UITableViewCells due to the fact when no initial image is present the imageView is hidden.\n\nComplete control over your image data\nGuarantees that the same image url will not be downloaded again but will be fetched from the cache.\nOption for force downloading the same image overriding the cache.\nOption for clearing images from the cache which correspond to specific URLs so they can be re-downloaded once, instead of force downloading them continuously.\nNotifies the caller when the operation is complete providing descreptive error if any.\nImage can be scaled to your specific view dimensions for best performance and reduced memory allocation.\nImage can be zoomed to full screen\nImage can be blurred",
  "homepage": "https://github.com/lamprosg/LazyImage",
  "license": {
    "type": "Apache Licence, Version 2.0",
    "file": "LICENSE"
  },
  "authors": {
    "Lampros Giampouras": "lamprosgiamp@gmail.com"
  },
  "source": {
    "git": "https://github.com/lamprosg/LazyImage.git",
    "tag": "6.6.0"
  },
  "swift_version": "4.2",
  "platforms": {
    "ios": "8.0"
  },
  "source_files": "Library/*"
}
