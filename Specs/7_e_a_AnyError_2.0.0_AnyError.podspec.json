{
  "name": "AnyError",
  "version": "2.0.0",
  "summary": "Swift µframework - `AnyError(cause:ErrorType)` - providing type erasure for ErrorType(s)",
  "description": "Swift µframework - `AnyError(cause:ErrorType)` - providing type erasure for ErrorType(s). Originally designed to be used as the error type associated with a Future or Result - so that when composing futures with map/flatMap the error type is the same and can be propagated through the compositional chain.",
  "homepage": "http://nickager.com/blog/2016/03/07/AnyError",
  "license": {
    "type": "MIT",
    "file": "LICENSE"
  },
  "authors": {
    "Nick Ager": "nick.ager@gmail.com"
  },
  "source": {
    "git": "https://github.com/nickager/AnyError.git",
    "tag": "2.0.0"
  },
  "social_media_url": "http://twitter.com/NickAger",
  "platforms": {
    "ios": "9.0"
  },
  "source_files": "AnyError/Classes/**/*",
  "pushed_with_swift_version": "3.0"
}
