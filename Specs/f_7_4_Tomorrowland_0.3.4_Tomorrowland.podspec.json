{
  "name": "Tomorrowland",
  "version": "0.3.4",
  "summary": "Lightweight Promises for Swift and Obj-C",
  "description": "Tomorrowland is a lightweight Promise implementation for Swift and Obj-C that supports cancellation and strongly-typed errors.",
  "homepage": "https://github.com/kballard/Tomorrowland",
  "license": {
    "type": "MIT",
    "file": "LICENSE-MIT"
  },
  "authors": "Lily Ballard",
  "social_media_url": "https://twitter.com/LilyInTech",
  "platforms": {
    "ios": "9.0",
    "osx": "10.10",
    "watchos": "2.0",
    "tvos": "9.0"
  },
  "swift_version": "4.0",
  "source": {
    "git": "https://github.com/kballard/Tomorrowland.git",
    "tag": "v0.3.4"
  },
  "source_files": [
    "Sources/Private/TWLPromiseInvalidationTokenBox.h",
    "Sources/Private/TWLThreadLocal.h",
    "Sources/Private/TWLOneshotBlock.h",
    "Sources/Private/TWLPromiseBox.h",
    "Sources/ObjC/TWLDelayedPromise.h",
    "Sources/ObjC/TWLContext.h",
    "Sources/ObjC/Tomorrowland.h",
    "Sources/ObjC/TWLWhen.h",
    "Sources/ObjC/TWLPromise.h",
    "Sources/ObjC/TWLUtilities.h",
    "Sources/Private/TWLPromiseBox.m",
    "Sources/Private/TWLPromiseInvalidationTokenBox.m",
    "Sources/Private/TWLThreadLocal.m",
    "Sources/ObjC/TWLWhen.m",
    "Sources/ObjC/TWLUtilities.m",
    "Sources/ObjC/TWLDelayedPromise.m",
    "Sources/ObjC/TWLContext.m",
    "Sources/Private/TWLOneshotBlock.mm",
    "Sources/ObjC/TWLPromise.mm",
    "Sources/Utilities.swift",
    "Sources/When.swift",
    "Sources/TokenPromise.swift",
    "Sources/Compatibility.swift",
    "Sources/ObjectiveC.swift",
    "Sources/Promise.swift",
    "Sources/ObjC/Bridging.swift",
    "Sources/ObjC/TWLInvalidationToken.swift",
    "Sources/DelayedPromise.swift"
  ],
  "private_header_files": "Sources/Private/*.h",
  "preserve_paths": [
    "Sources/ObjC/TWLPromisePrivate.h",
    "Sources/ObjC/TWLContextPrivate.h",
    "Sources/ObjC/objc_cast.h"
  ],
  "libraries": "c++",
  "module_map": "Sources/tomorrowland.modulemap"
}
