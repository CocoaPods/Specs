{
  "name": "JWInfiniteCollectionView",
  "version": "0.1.0",
  "summary": "JWInfiniteCollectionView provides a convenient way to have a infinitely-scrolling collection view.",
  "description": "Sometimes, your appâ€™s UX designer wants infinite scroll for one of your collection views when the data displayed is limited. When a user scrolls to the very end of the data set, the first piece of data reappears on screen; if the use scrolls the other way, the last piece of data reappears.Traditionally, the solution for an infinite UICollectionView is to have a large duplicated data set (for example, 1000 * original data set) to trick the user into believing the collection view is infinite. \nBut, a large duplicated data will inevitably introduce extra overhead by having a large amount of UICollectionViewLayoutAttributes. Besides, what if the user is bored to death and just sits there for a day to scroll your collection view? The chance for this to happen might be small, but, after all, having a large duplicated data set is not a very elegant solution.\nJWInfiniteCollectionView pads only a few extra duplicated items both at the start and end of your data set. In this way, it avoids the some overhead introduced by having a large duplicated data set.",
  "homepage": "https://github.com/Alex1989Wang/JWInfiniteCollectionView",
  "license": {
    "type": "MIT",
    "file": "LICENSE"
  },
  "authors": {
    "Alex1989Wang": "alex1989wang@gmail.com"
  },
  "source": {
    "git": "https://github.com/Alex1989Wang/JWInfiniteCollectionView.git",
    "tag": "0.1.0"
  },
  "social_media_url": "http://www.awsomejiang.com/",
  "platforms": {
    "ios": "8.0"
  },
  "source_files": "JWInfiniteCollectionView/Classes/**/*"
}
