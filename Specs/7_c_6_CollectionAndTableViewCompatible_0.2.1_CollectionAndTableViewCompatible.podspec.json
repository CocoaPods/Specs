{
  "name": "CollectionAndTableViewCompatible",
  "version": "0.2.1",
  "summary": "A set of Swift protocols and Xcode snippets that will make it easy to do clean UICollectionView and UITableView code.",
  "swift_version": "4.2",
  "description": "The project consists of three protocols:\n- `TableViewCompatible`\n- `Configurable`\n- `TableViewSection`\n\nCreate a view model that conforms to the `TableViewCompatible` protocol. The view model could either be a separate class or an extension to your existing model obejct. Your choice.\n\nThe create a `UITableViewCell` subclass that conforms to the `Configurable` protocol. Make the function `configureWithModel` take an instance of your view model as parameter.\n\nFinally create a class or struct that conforms to the `TableViewSection` protocol and let your `UITableViewDataSource` data model be an array of `TableViewSection`.\n\nFor a more detailed explaination see this [blog post](https://blog.jayway.com/2016/11/15/clean-table-view-code-using-swift-protocols/)",
  "homepage": "https://github.com/jayway/CollectionAndTableViewCompatible",
  "license": {
    "type": "Apache Version 2.0",
    "file": "LICENSE"
  },
  "authors": {
    "Jimmie Jensen": "jimmie.jensen@jayway.com"
  },
  "source": {
    "git": "https://github.com/jayway/CollectionAndTableViewCompatible.git",
    "tag": "0.2.1"
  },
  "platforms": {
    "ios": "8.0"
  },
  "source_files": "Classes/**/*",
  "frameworks": "UIKit"
}
