{
  "name": "VBAutolayout",
  "version": "2.0.0",
  "summary": "VBAutolayout is a library which makes programmatic autolayout creation comfortable, readable and code-minimized.",
  "description": "There are developers (like me) who prefer to create UI programmatically due to numerous reasons. I use storyboards for segues and user scene-path. But UIViewControllers are left empty. And I do not use xibs.\n\nWhen you create adaptive UI programmatically the view (or viewcontroller) code becomes unreadable because of big autolayout creation calls.\n\nVBAutolayout is a library which makes programmatic autolayout creation comfortable, readable and code-minimized.\n\nFormat\n\nViews layout is described in a dictionary with special VBAutolayout format. Constraints are created only for VBAutolayoutAttribute-s contained in layout dictionary. Attribute is ignored if no VBAutolayoutConstant value was given.\n\nLayout dictionary format:\n\n    @{VBAutolayoutAttribute: <1>,\n      VBAutolayoutAttribute: <2>,\n      VBAutolayoutAttribute: <3>\n    }\n\n    <1> =  <const>\n\n    <2> =  @{VBAutolayoutItem: <item>,\n             VBAutolayoutConstant: <const>}\n\n    <3> =  @[<1>, <2>, ...]\n\n<item> is a view2 in constraint. If no <item> specified, then superview is used and constraint is interpreted as a constraint to view container.\n\n<const> is a string with the same format as could be used for Visual Format Constraints Creation\n\n    <const> = <relation><constant>@<priority>, ex. 10, ==10, >=10, <=10, 10@999, >=10@999, etc.\n    <relation> =    1) <, <= for <=\n                    2) >, >= for >=\n                    3) =, == for ==\n\nSeveral constraints can be combined for one attribute using variant <3>.\n\nExamples,\n\n- distance greater or equal then 10 from item top to someView bottom with 999 priority\n    VBAutolayoutAttributeTop: @{VBAutolayoutItem: __someView__,`\n                                VBAutolayoutConstant: @\">=10@999\"}`\n- distance equal to 0 from item leading to someView trailing\n    VBAutolayoutAttributeLeading: @{VBAutolayoutItem: __someView__}\n- distance equal to 0 from item leading to container leading\n    VBAutolayoutAttributeLeading: @\"0\"",
  "homepage": "https://github.com/valnoc/VBAutolayout",
  "license": "MIT",
  "authors": {
    "Valeriy Bezuglyy": "valnocorner@gmail.com"
  },
  "source": {
    "git": "https://github.com/valnoc/VBAutolayout.git",
    "tag": "v2.0.0"
  },
  "platforms": {
    "ios": "8.1"
  },
  "requires_arc": true,
  "source_files": "VBAutolayout/**/*"
}
