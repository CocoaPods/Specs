{
  "name": "ValidModel",
  "version": "0.1.0",
  "swift_version": "4.1",
  "platforms": {
    "ios": "8.0"
  },
  "summary": "ValidModel empowers model validation and autogeneration.",
  "description": "ValidModel enhances application models and makes data safer to handle and easier to reason about.\n\nIn many cases projects are stuffed with 'mocks'. They provide good value\nhowever it comes with a price of extra development and maintanence that mock loading system\nand mock files require (source code that loads mock data, mock data files that are supposed to match model's format).\n\nIn a nutshell ValidModel proposes a different workflow when working with application models and it boils down to an ideas of Validation.\nAssume having a model with clearly defined min-max range values for the properties of the model.\nBy just knowing min-max limits information it is easy to:\n  - confirm that given model instance contains correct values that application knows how to deal with.\n  - generate new instance of this model for easy testing, N times (whether you work on UI edge case or API is not available, it is just like an object from mock data, but autogenerated, N times).",
  "homepage": "https://github.com/ReImpl/ValidModel",
  "license": {
    "type": "MIT",
    "file": "LICENSE"
  },
  "authors": {
    "kernel": "kernel@reimplement.mobi"
  },
  "source": {
    "git": "https://github.com/ReImpl/ValidModel.git",
    "tag": "0.1.0"
  },
  "subspecs": [
    {
      "name": "Base",
      "source_files": "ValidModel/Classes/Base/**/*.{swift}"
    },
    {
      "name": "Extended",
      "dependencies": {
        "ValidModel/Base": [

        ],
        "Fakery": [

        ]
      },
      "source_files": "ValidModel/Classes/Extended/**/*.{swift}"
    }
  ]
}
